(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{556:function(t,a,s){"use strict";s.r(a);var r=s(5),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_1-开篇-既简单又复杂的基础框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-开篇-既简单又复杂的基础框架"}},[t._v("#")]),t._v(" 1. 开篇：既简单又复杂的基础框架")]),t._v(" "),s("h4",{attrs:{id:"同样的基础但不简单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同样的基础但不简单"}},[t._v("#")]),t._v(" 同样的基础但不简单")]),t._v(" "),s("p",[t._v("之前在写 "),s("a",{attrs:{href:"https://juejin.cn/book/6857911863016390663",target:"_blank",rel:"noopener noreferrer"}},[t._v("《从 0 开始深入学习 Spring》"),s("OutboundLink")],1),t._v(" 小册时，阿熊提到过一件事：学习 JavaEE 开发的第一个框架，大多数是推荐 MyBatis 的，因为它相对简单，学习起来也相对轻松。不过不要因为 MyBatis 入门简单，就认为 MyBatis 这个框架简单。MyBatis 自打 2001 年问世，到 2004 年出来 iBATIS 2.0 ，再到 2010 年发布 MyBatis 3.0 ，这个框架的设计和底层一直都广受研究，也有不少开发者从中汲取到了宝贵的设计经验。总的来说，"),s("strong",[t._v("MyBatis 是一个非常优秀的持久层框架，是一个使用起来简单的框架，同时也是一个值得我们去深入研究和探索的框架")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"mybatis的核心真的不少"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis的核心真的不少"}},[t._v("#")]),t._v(" MyBatis的核心真的不少")]),t._v(" "),s("p",[t._v("仔细翻看一下 MyBatis 的核心特性，会发现还是不少的：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2f3727d0e61c4f3e91e9045dbb841280~tplv-k3u1fbpfcp-watermark.awebp",alt:"MyBatis大纲.png"}})]),t._v(" "),s("p",[t._v("其中不乏有很多是我们之前学习基础时就了解过的，当然也有一些是隐藏在底层没有让我们直接操控的（比方说解析器、绑定器等等）。既然我们是要深入 MyBatis 的内部，那这些隐藏的模块和特性我们同样需要了解。")]),t._v(" "),s("h4",{attrs:{id:"小册涉及到的广度和深度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小册涉及到的广度和深度"}},[t._v("#")]),t._v(" 小册涉及到的广度和深度")]),t._v(" "),s("p",[t._v("同样的，我们先来聊聊这本小册涉及到 MyBatis 知识的广度和深度。如果小伙伴已经大致的浏览过目录和上面的导图概览，可以发现涉及到的内容那是相当广了，而且深度也足够了（试问阿熊的小册哪本不是深度满满？）。广度的学习需要小伙伴对 MyBatis 的基础知识有所掌握（最起码会用吧），毕竟用过之后再扩展的话更容易接受；深度的学习还是跟之前的小册一样，小册会带各位深入源码中剖析 MyBatis 的底层设计的逻辑，梳理整个流程的脉络。")]),t._v(" "),s("p",[t._v("希望能通过小册对 MyBatis 的知识深入讲解，帮助小伙伴们一步一步，从小白成长为大佬，走向人生巅峰，迎娶白富美（再次划掉...）。")]),t._v(" "),s("h4",{attrs:{id:"小册的行文思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小册的行文思路"}},[t._v("#")]),t._v(" 小册的行文思路")]),t._v(" "),s("p",[t._v("这次小册的行文思路与 SpringFramework 的小册不同，由于 SpringFramework 本身的模块区分非常明显（ IOC 、AOP 、Dao 、Web ），而 MyBatis 本身框架比较简单，内部设计的模块和特性都不算大，也没有一个特别明显的大面上的划分，所以本小册的行文大致是以"),s("strong",[t._v("一个核心特性 / 模块的基础回顾 → 使用示例 → 高级使用方法 → 原理分析")]),t._v("的风格，当然这其中核心特性的讲解会穿插着 MyBatis 的执行流程和生命周期的剖析，后面小册也有专门的几章讲解 MyBatis 的整体生命周期，以及工作流程的执行机制，二者是相辅相成、相互照应的。")]),t._v(" "),s("p",[t._v("希望各位小伙伴在阅读小册时尽可能的跟着小册做好练习和随手笔记，相信大家读完小册后，会对 MyBatis 框架产生一个新的认识，也能从更高的角度和水平驾驭 MyBatis 框架。")])])}),[],!1,null,null,null);a.default=e.exports}}]);